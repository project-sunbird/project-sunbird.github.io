swagger: '2.0'
info:
  version: '1.0'
  title: Sunbird Content API(s)
  description: >-
    The Content API resources perform operations related to 
    _Content_ on the Sunbird Platform. The operations include the basic CRUD (Create, Update,Read and Delete) operations and other operations such as upload, publish.
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /api/content/v1
securityDefinitions:
  auth:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /create:
    post:
      description: >-
       This API is associated with creating content on the Sunbird Platform .
          - **_/create/_** endpoint executes the "Create Content" request based on parameters provided as metadata in the request body.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Create Content
      tags:
        - Content APIs
      operationId: Create Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be created, i.e an array of parameters which describes the content.
          schema:
            $ref: '#/definitions/CreateContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.' 
        - name: x-channel-id
          in: header
          required: true
          type: string
          description: 'The unique ID provided to the State to which the user belongs.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Create Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Create Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/create
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "content": {
                    "visibility": "Default",
                    "status": "Draft",
                    "contentType": "Story",
                    "code": "test_cwp_3",
                    "osId": "org.ekstep.quiz.app",
                    "languageCode": "hi",
                    "name": "Test Content",
                    "description": "Test Content",
                    "language": [
                      "Hindi"
                    ],
                    "createdFor": [
                      "012297427021119488540"
                    ],
                    "createdBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001",
                    "mimeType": "application/vnd.ekstep.ecml-archive"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /update/{Content_Id}:
     parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
     patch:
      description: >-
        This API is associated with updating content on the Sunbird Platform .
          - **_/Update/_** endpoint executes the "Update Content" request based on parameters provided as metadata in the request body.
          - {...}refers to a section of review endpoint URL path that needs to be replaced by appropriate Id.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Update Content
      tags:
        - Content APIs
      operationId: Update Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be updated.
          schema:
            $ref: '#/definitions/UpdateContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID used to execute the API.'
        - name: X-Channel-id
          in: header
          required: true
          type: string
          description: 'The unique ID provided to the State to which the user belongs.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Update Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Create Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: PATCH
            uri: /content/v1/update/{Content_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "content": {
                    "languageCode": "string",
                    "name": "string",
                    "description": "string",
                    "language": [
                      "Hindi"
                    ],
                    "createdFor": [
                      "012297427021119488540"
                    ]
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Update Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /publish/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: ''
    post:
      description: >-
        This API is associated with publishing content on the Sunbird Platform .
          - **_/publish/_** endpoint executes the "Publish Content" request based on parameters provided as metadata in the request body.
          -  {...}refers to a section of review endpoint URL path that needs to be replaced by appropriate Id.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Publish Content
      tags:
        - Content APIs
      operationId: Publish Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >- 
            The body refers to the format of the request.
              - The body contains metadata about the content to be published.
          schema:
            $ref: '#/definitions/PublishContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'User Registered ID , which is used for logging In'
        - name: Authorization
          in: header
          required: true
          type: string
          description: Authorizing user in order to grant access.
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **publish** request was sent. '
      responses:
        '200':
          description: >-
            SUCCESS. The **Publish Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Publish Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/publish/{Content_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: |-
              {
                "request": {
                  "content": {
                    "lastPublishedBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Publish Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /unlisted/publish/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: ''
    post:
      description: >-
        This API is associated with publishing content on the Sunbird Platform .
          - **_/publish/_** endpoint executes the "Publish Content" request based on parameters provided as metadata in the request body.
          -  {...}refers to a section of review endpoint URL path that needs to be replaced by appropriate Id.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty
      summary: Private Publish Content
      tags:
        - Content APIs
      operationId: Unlisted Publish Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >- 
            The body refers to the format of the request.
              - The body contains metadata about the content to be published privately.
          schema:
            $ref: '#/definitions/PublishContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'User Registered ID , which is used for logging In'
        - name: Authorization
          in: header
          required: true
          type: string
          description: Authorizing user in order to grant access.
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **publish** request was sent. '
      responses:
        '200':
          description: >-
           SUCCESS. The **Publish Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Publish Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/publish/{Content_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: |-
              {
                "request": {
                  "content": {
                    "lastPublishedBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Publish Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /retire/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content Id To the Request URL'   
    delete:
      description: >-
        This API is associated with publishing content on the Sunbird Platform .
          - The **_/retire/{contentId}_** endpoint executes  "Retire Content" request based on content Id to delete the specific content.'
          - {...}refers to a section of review endpoint URL path that needs to be replaced by appropriate Id.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty
      summary: Retire Content
      tags:
        - Content APIs
      operationId: Retire Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be deleted.
          schema:
            $ref: '#/definitions/RetireContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **delete** request was sent.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Delete Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            BAD REQUEST. The **Delete Content** operation failed. You may have missed input for a mandatory parameter.
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: DELETE
            uri: /content/v1/retire/{Content_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: |-
              {
                "request": {
                  "contentIds": [
                    "do_3123180264398192642407"
                  ]
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Retire Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /review/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description: >-
       >-
       This API is associated with Submission of content for Review  on the Sunbird Platform .
          - The**_/review/{content Id}_** endpoint executes "Submit for Review" request based on parameters provided as metadata in the request body.
          - {...}refers to a section of review endpoint URL path that needs to be replaced by appropriate Id.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty
      summary: Submit for Review
      tags:
        - Content APIs
      operationId: Submit for Review
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be sent for review.
          schema:
            $ref: '#/definitions/ReviewContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **review** request was sent. '
      responses:
        '200':
          description: >-
            SUCCESS. The **Content Sent for Review** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Content Sent for Review** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/review/{contentId}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: '{ }'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Submit for Review
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /upload/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description:  >-
       This API is associated with uploading content on the Sunbird Platform .
          - The**_/upload/{content Id}_** endpoint executes "Create Content" request based on parameters provided as metadata in the request body.
          - {...}refers to a section of upload endpoint URL path that needs to be replaced by appropriate Id.
          - You need to provide a valid content ID value in {Content Id} field of API URL.
          - It is mandatory to provide values for parameters marked with *. 
          - Mandatory fields cannot be null or empty.
      summary: Upload Content
      tags:
        - Content APIs
      operationId: Upload Content
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          required: true
          type: file
          format: file
          description: 'Content package file which you intend to upload'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: Time Stamp at which **upload** request was sent.
      responses:
        '200':
          description: >-
            SUCCESS. The **Upload Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentUploadResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Upload Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /search:
    post:
      description: >-
        This API is associated with Searching content on the Sunbird Platform .
          - The**_/search/_** endpoint executes "Search Content" request for fetching the contents as results for a particular search criterion.
          - It is mandatory to provide values for parameters marked with *. 
          - Mandatory fields cannot be null or empty.
      summary: Search Content
      tags:
        - Content APIs
      operationId: Search Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description:  >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be fetched.
          schema:
            $ref: '#/definitions/SearchContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **Search** request was sent.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Search Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentSearchResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Search Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/search
            headers:
              Content-Type: application/json
              Authorization: 'Bearer {{api_key}}'
              X-Authenticated-Userid: '{{user_id}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: |-
              {
                  "request": {
                      "filters":{
                          "channel": "505c7c48ac6dc1edc9b08f21db5a571d",
                          "objectType": ["Content"],
                          "contentType": ["Story", "Worksheet", "Textbook", "Course", "Collection"],
                    "status":["Live"]
                      },
                      "sort_by": {"createdOn": "asc"},
                      "fields": ["name", "contentType", "createdFor", "createdBy", "createdOn", "status", "mimeType", "channel", "lastUpdatedOn"]
                  }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Search Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /flag/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description: >-
        This API is associated with setting Flag for content under review on the Sunbird Platform .
          - The **_/flag/{content Id}_** endpoint executes a request to set flagging status for content ,flag can either be set to "Accepted" or "Rejected".
          - {...}refers to a section of reject endpoint URL path that needs to be replaced by appropriate Id.
          - You need to provide a valid content ID value in {Content Id} field of API URL.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Flag Content
      tags:
        - Content APIs
      operationId: Flag Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
           The body refers to the format of the request.
            - The body contains request about setting flag to "Accept" or "Reject" for content in review process.
          schema:
            $ref: '#/definitions/FlagContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **Flag content** request was sent.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Flag Content** operation was successful!.
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Flag Content* operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/flag/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: |-
              {
                "request": {
                  "content": {
                    "flaggedBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001",
                    "flagReasons": ["Flag comment"],
                    "flags": ["InAppropriate Content"]
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Flag Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /flag/accept/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description: >-
        This API is associated with setting Accept Flag for content under review process on the Sunbird Platform .
          - The **_/flag/accept/_**endpoint executes request for flagging content under review to "Accept flag", if content is found appropriate.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty
      summary: Accept Flag
      tags:
        - Content APIs
      operationId: Accept Flag
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains request about setting flag to accept for content in review process.
          schema:
            $ref: '#/definitions/FlagAcceptContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.' 
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: Time Stamp at which **Accept Flag** request was sent.
      responses:
        '200':
          description: >-
            SUCCESS. The **Accept Flag** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >- 
            'BAD REQUEST. The **Accept Flag** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/flag/accept/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: '{}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Accept Flag
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /flag/reject/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description: >-
        This API is associated with setting Reject Flag for content under review process on the Sunbird Platform .
          - The **_/flag/reject/_**endpoint executes request for flagging content under review to "Reject flag", if content is found in-appropriate.
          - It is mandatory to provide values for parameters marked with *. 
          - Mandatory fields cannot be null or empty.
      summary: Reject Flag
      tags:
        - Content APIs
      operationId: Reject Flag
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains request about setting flag to accept for content in review process.
          schema:
            $ref: '#/definitions/FlagRejectContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: 'Time Stamp at which **Accept Flag** request was sent.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Reject Flag** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Reject Flag** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/flag/reject/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: '{}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Reject Flag
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /reject/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    post:
      description: >-
        This API is associated with Rejecting rejecting content
        under review after "Reject content flag" has been set on the Sunbird Platform .
          - The **_/reject/{contentId}_** endpoint executes request for rejecting content which is under review. 
          - {...}refers to a section of reject endpoint URL path that needs to be replaced by appropriate Id.
          - You need to provide a valid content ID value in {Content Id} field of API URL.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Reject Content Review
      tags:
        - Content APIs
      operationId: Reject Content Review
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
             - The body contains request about setting flag to reject for content in review process.
          schema:
            $ref: '#/definitions/RejectContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
        - name: ts
          in: header
          required: true
          type: string
          description: Time Stamp at which **Content Reject** request was sent.
      responses:
        '200':
          description: >-
            SUCCESS. The **Reject Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Reject Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/reject/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
              ts: '2017-05-25 10:18:56:578+0530'
            body: '{}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Reject Content Review
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /read/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    get:
      description: >-
        This API is associated with viewing and reading out the content on the Sunbird Platform .
          - The **_/read/{contentId}_** endpoint executes request for fetching the contents to be viewed and read.
          - {...}refers to a section of reject endpoint URL path that needs to be replaced by appropriate Id.
          - You need to provide a valid content ID value in {Content Id} field of API URL.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Read Content
      tags:
        - Content APIs
      operationId: Read Content
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: X-Channel-id
          in: header
          required: true
          type: string
          description:  'The unique ID provided to the State to which the user belongs.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Read Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentGetResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Read Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: GET
            uri: /content/v1/read/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Read Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /hierarchy/update:
    post:
      description: >-
       This API is associated with updating hierarchy content on the Sunbird Platform .
          - **_/hierarchy/update_** endpoint executes the "Create Content" request based on parameters provided as metadata in the request body.
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Hierarchy Update Content
      tags:
        - Content APIs
      operationId: Hierarchy Update Content
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
            The body refers to the format of the request.
              - The body contains metadata about the content to be updated, i.e an array of parameters which describes the content.
          schema:
            $ref: '#/definitions/UpdateHierarchyContentRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.' 
        - name: x-channel-id
          in: header
          required: true
          type: string
          description: 'The unique ID provided to the State to which the user belongs.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Update Hierarchy Content** operation was successful!
          schema:
            $ref: '#/definitions/ContentUpdateHierarchyResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Update Hierarchy Content** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: POST
            uri: /content/v1/create
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "content": {
                    "visibility": "Default",
                    "status": "Draft",
                    "contentType": "Story",
                    "code": "test_cwp_3",
                    "osId": "org.ekstep.quiz.app",
                    "languageCode": "hi",
                    "name": "Test Content",
                    "description": "Test Content",
                    "language": [
                      "Hindi"
                    ],
                    "createdFor": [
                      "012297427021119488540"
                    ],
                    "createdBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001",
                    "mimeType": "application/vnd.ekstep.ecml-archive"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /hierarchy/{Content_Id}:
    parameters:
      - in: path
        name: Content_Id
        type: string
        required: true
        description: 'Please append a valid Content ID To the Request URL'   
    get:
      description: >-
        This API is associated with fetching the content hierarchy using a specific content ID on the Sunbird Platform .
          - The **_/hierarchy/{contentId}_** endpoint executes request for fetching the contents to be viewed and read.
          - {...}refers to a section of reject endpoint URL path that needs to be replaced by appropriate Id.
          - You need to provide a valid content ID value in {Content Id} field of API URL
          - It is mandatory to provide values for the required fields
          - Required fields cannot be null or empty.
      summary: Get Content Hierarchy Object
      tags:
        - Content APIs
      operationId: Get Content Hierarchy
      produces:
        - application/json
      parameters:
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'The Registered User ID to execute the API.'
        - name: X-Channel-id
          in: header
          required: true
          type: string
          description:  'The unique ID provided to the State to which the user belongs.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All content APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Read Content Hierarchy** operation was successful!
          schema:
            $ref: '#/definitions/ContentHierarchyGetResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Read Content Hierarchy** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
        - auth: []
      x-unitTests:
        - request:
            method: GET
            uri: /content/v1/read/<contentId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Read Content
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  CreateContentRequest:
    title: Create ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentCreateContentObject'
    required:
      - request
  ContentCreateContentObject:
    title: ContentCreateContentObject
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentCreateObject'
    required:
      - content
  ContentCreateObject:
    title: ContentCreateObject
    type: object
    properties:
      name:
        description: 'Name of the content'
        type: string
      code:
        description: 'Unique code for the content'
        type: string
      os:
        description: 'Supported Operating Systems'
        type: array
        items:
          type: string
      minOsVersion:
        description: 'Min Supported OS Version'
        type: string
      compatibilityLevel:
        description: 'It is the integer value being used by Client (Genie) for the Compatibility information of Content.'
        type: number
      minGenieVersion:
        description: 'Min Supported Genie Version'
        type: string
      minSupportedVersion:
        description: 'Minimum Supported Version of this content'
        type: string
      filter:
        description: 'Filter Criteria (JSON)'
        type: string
      variants:
        description: ''
        type: string
      config:
        description: ''
        type: string
      visibility:
        description: 'Visibility'
        type: string
        example:
          - default
          - parent
      audience:
        description: 'The target audience of the Content'
        type: string
        example:
          - Learner
          - Instructor
      posterImage:
        description: ''
        type: string
      badgeAssertions:
        description: 'List of Badges'
        type: string
      mimeType:
        description: 'Content mime type'
        type: string
        example:
          - application/vnd.ekstep.ecml-archive
          - application/vnd.ekstep.html-archive
          - application/vnd.android.package-archive
          - application/vnd.ekstep.content-archive
          - application/vnd.ekstep.content-collection
          - application/vnd.ekstep.plugin-archive
          - application/vnd.ekstep.h5p-archive
          - application/epub
          - text/x-url
          - video/x-youtube
          - application/octet-stream
          - application/msword
          - application/pdf
          - image/jpeg
          - image/jpg
          - image/png
          - image/tiff
          - image/bmp
          - image/gif
          - image/svg+xml
          - video/avi
          - video/mpeg
          - video/quicktime
          - video/3gpp
          - video/mpeg
          - video/mp4
          - video/ogg
          - video/webm
          - audio/mp3
          - audio/mp4
          - audio/mpeg
          - audio/ogg
          - audio/webm
          - audio/x-wav
          - audio/wav
      mediaType:
        description: 'Content media type'
        type: string
        example:
          - content
          - collection
          - image
          - video
          - audio
          - voice
          - ecml
          - document
          - pdf
          - text
          - other  
      appIcon:
        description: ''
        type: string
      grayScaleAppIcon:
        description: ''
        type: string
      thumbnail:
        description: ''
        type: string
      objects:
        description: 'Objects Used in the Content'
        type: string  
      organization:
        description: 'Org names (partner names)'
        type: array
        items:
          type: string
      createdFor:
        description: 'partner IDs'
        type: array
        items:
          type: string
      developer:
        description: 'Content Developer'
        type: string
      source:
        description: 'Source of the content'
        type: string
      board:
        description: 'Education Board (Like MP Board, NCERT, etc)'
        type: string
      subject:
        description: 'Subject of the Content to use to teach'
        type: string
      medium:
        description: 'Medium of instruction'
        type: string
      notes:
        description: 'Notes for the instructor.'
        type: string
      pageNumber:
        description: 'Page number of Textbook which the Content belongs to.'
        type: string
      publication:
        description: 'Name of the Publication House.'
        type: string
      edition:
        description: 'Edition Information of the Content.'
        type: string
      publisher:
        description: 'Publisher of the content (e.g. Pratham Books)'
        type: string
      author:
        description: 'Content Author'
        type: string
      owner:
        description: 'Content Owner'
        type: string
      attributions:
        description: 'Attributions/Credits'
        type: array
        items:
          type: string
      collaborators:
        description: 'Collaborators'
        type: array
        items:
          type: string
      voiceCredits:
        description: 'Voice Credits'
        type: array
        items:
          type: string
      soundCredits:
        description: 'Audio and background scores by'
        type: array
        items:
          type: string
      imageCredits:
        description: 'Images created by'
        type: array
        items:
          type: string
      copyright:
        description: 'Copyright'
        type: string
      license:
        description: 'License'
        type: string
        example:
          - Against DRM license
          - Creative Commons Attribution-NoDerivs (CC-BY-ND)
          - Creative Commons Attribution (CC BY)
          - Creative Commons Attribution-ShareAlike (CC BY-SA)
          - Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)
          - Creative Commons Zero (CC0)
          - Free Art License
          - Open Audio License
          - Open Game License
          - Standard YouTube License
          - Other
      language:
        description: 'Language'
        type: string
        example:
          - English
          - Hindi
          - Assamese
          - Bengali
          - Gujarati
          - Kannada
          - Malayalam
          - Marathi
          - Nepali
          - Odia
          - Punjabi
          - Tamil
          - Telugu
          - Urdu
          - Sanskrit
          - Maithili
          - Munda
          - Santali
          - Juang
          - Ho
          - Other
      forkable:
        description: 'Forkable'
        type: boolean
      translatable:
        description: 'Translatable'
        type: boolean
      ageGroup:
        description: 'Suggested Age Group'
        type: string
        example:
          - '<5'
          - '5-6'
          - '6-7'
          - '7-8'
          - '8-10'
          - '>10'
          - 'Other'
      gradeLevel:
        description: 'Grade Level'
        type: string
        example:
          - Kindergarten
          - Grade 1
          - Grade 2
          - Grade 3
          - Grade 4
          - Grade 5
          - Grade 6
          - Grade 7
          - Grade 8
          - Grade 9
          - Grade 10
          - Grade 11
          - Grade 12
          - Other
      interactivityLevel:
        description: 'Interactivity Level'
        type: string
        example:
          - High
          - Medium
          - Low
      contentType:
        description: 'Content Type'
        type: string
        example:
          - Story
          - Worksheet
          - Game
          - Simulation
          - Puzzle
          - Diagnostic
          - Collection
          - Asset
          - Template
          - Plugin
          - ContentTemplate
          - ItemTemplate
          - TextBook
          - TextBookUnit
          - Course
          - CourseUnit
      resourceType:
        description: 'Resource Type'
        type: string
        example:
          - Story
          - Worksheet
          - Game
          - Course
          - Book
          - Diagnostic
          - Puzzle
          - Benchmark assessment
          - Daily test
          - Summative exam
          - (Annual / Half-yearly / Semester) Examination
          - Article
          - Learning / Study material
          - Reference material
          - Simulation
          - Activity
          - Quiz
          - Lesson plan
          - Unit plan
          - Academic calendar
          - Classroom assessments
          - Reflective journals
          - Timed worksheets
          - Teaching resources
          - E-resources for Professional Development
          - Micro practice videos
      category:
        description: 'Category'
        type: string
        example:
          - core
          - learning
          - literacy
          - math
          - science
          - time
          - wordnet
          - game
          - mcq
          - mtf
          - ftb
          - library
      templateType:
        description: 'Template Type'
        type: string
        example:
          - story
          - worksheet
          - mcq
          - ftb
          - mtf
          - recognition
          - activity
          - widget
          - other
      genre:
        description: 'Genre'
        type: string
        example:
          - Picture Books
          - Chapter Books
          - Flash Cards
          - Serial Books
          - Alphabet Books
          - Folktales
          - Fiction
          - Non-Fiction
          - Poems/Rhymes
          - Plays
          - Comics
          - Words
      theme:
        description: 'Theme'
        type: string
        example:
          - History
          - Adventure
          - Mystery
          - Science
          - Nature
          - Art
          - Music
          - Funny
          - Family
          - Life Skills
          - Scary
          - School Stories
          - Holidays
          - Hobby
          - Geography
          - Rural
          - Urban
      keywords:
        description: 'Keywords'
        type: array
        items:
          type: string
      domain:
        description: 'Domain'
        type: array
        items:
          type: string
      description:
        description: 'Description'
        type: string
      instructions:
        description: 'Instructions'
        type: string
    required:
      - code
      - name
      - mimeType
  UpdateContentRequest:
    title: Update ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentUpdateContentObject'
    required:
      - request
  ContentUpdateContentObject:
    title: ContentUpdateContentObject
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentUpdateObject'
    required:
      - content
  ContentUpdateObject:
    title: ContentUpdateObject
    type: object
    properties:
      versionKey:
        description: ''
        type: string
      name:
        description: ''
        type: string
      code:
        description: ''
        type: string
      visibility:
        description: ''
        type: string
        example:
          - default/parent
      contentType:
        description: ''
        type: string
        example:
          - Story
          - Worksheet
          - Game
          - Simulation
          - Puzzle
          - Diagnostic
          - Collection
          - Asset
          - Template
          - Plugin
          - ContentTemplate
          - ItemTemplate
          - TextBook
          - TextBookUnit
          - Course
          - CourseUnit
      description:
        description: ''
        type: string
      mimeType:
        description: ''
        type: string
        example:
          - application/vnd.ekstep.ecml-archive
          - application/vnd.ekstep.html-archive
          - application/vnd.android.package-archive
          - application/vnd.ekstep.content-archive
          - application/vnd.ekstep.content-collection
          - application/vnd.ekstep.plugin-archive
          - application/vnd.ekstep.h5p-archive
          - application/epub
          - text/x-url
          - video/x-youtube
          - application/octet-stream
          - application/msword
          - application/pdf
          - image/jpeg
          - image/jpg
          - image/png
          - image/tiff
          - image/bmp
          - image/gif
          - image/svg+xml
          - video/avi
          - video/mpeg
          - video/quicktime
          - video/3gpp
          - video/mpeg
          - video/mp4
          - video/ogg
          - video/webm
          - audio/mp3
          - audio/mp4
          - audio/mpeg
          - audio/ogg
          - audio/webm
          - audio/x-wav
          - audio/wav
      mediaType:
        description: ''
        type: string
        example:
          - content
          - collection
          - image
          - video
          - audio
          - voice
          - ecml
          - document
          - pdf
          - text
          - other
    required:
      - versionKey
  PublishContentRequest:
    title: Publish ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentPublishContentObject'
    required:
      - request
  ContentPublishContentObject:
    title: ContentPublishContentObject
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentPublishObject'
    required:
      - content
  ContentPublishObject:
    title: ContentPublishObject
    type: object
    properties:
      lastPublishedBy:
        description: ''
        type: string
    required:
      - lastPublishedBy
  RetireContentRequest:
    title: Retire ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentRetireObject'
    required:
      - request
  ContentRetireObject:
    title: ContentRetireObject
    type: object
  ReviewContentRequest:
    title: Review ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentReviewObject'
    required:
      - request
  ContentReviewObject:
    title: ContentReviewObject
    type: object
  SearchContentRequest:
    title: Search ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentSearchContentObject'
    required:
      - request
  ContentSearchContentObject:
    title: ContentSearchContentObject
    type: object
    properties:
      filters:
        $ref: '#/definitions/ContentSearchObject'
      sort_by:
        $ref: '#/definitions/SortBy'
      fields:
        description: ''
        type: array
        items:
          type: string
    required:
      - filters
      - sort_by
      - fields
  ContentSearchObject:
    title: ContentSearchObject
    type: object
    properties:
      channel:
        description: ''
        type: string
      objectType:
        description: ''
        type: array
        items:
          type: string
      contentType:
        description: ''
        type: array
        items:
          type: string
      status:
        description: ''
        type: array
        items:
          type: string
    required:
      - channel
      - objectType
      - contentType
      - status
  SortBy:
    title: SortBy
    type: object
    properties:
      createdOn:
        description: ''
        type: string
    required:
      - createdOn
  FlagContentRequest:
    title: Flag ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentFlagContentRequest'
    required:
      - request
  ContentFlagContentRequest:
    title: ContentFlagContentRequest
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentFlagObject'
    required:
      - content
  ContentFlagObject:
    title: ContentFlagObject
    type: object
    properties:
      flaggedBy:
        description: ''
        type: string
      flagReasons:
        description: ''
        type: array
        items:
          type: string
      versionKey:
        description: ''
        type: string
    required:
      - flaggedBy
      - flagReasons
      - versionKey
  FlagAcceptContentRequest:
    title: Publish ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentFlagAcceptObject'
    required:
      - request
  ContentFlagAcceptObject:
    title: ContentFlagAcceptObject
    type: object
    properties:
      versionKey:
        description: ''
        type: string
    required:
      - versionKey
  FlagRejectContentRequest:
    title: Publish ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentFlagRejectObject'
    required:
      - request
  ContentFlagRejectObject:
    title: ContentFlagRejectObject
    type: object
  RejectContentRequest:
    title: Reject ContentRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentRejectObject'
    required:
      - request
  ContentRejectObject:
    title: ContentFlagRejectObject
    type: object
  UpdateHierarchyContentRequest:
    title: Update Hierarchy Content Request
    type: object
    properties:
      request:
        $ref: '#/definitions/ContentUpdateHierarchyContentObject'
    required:
      - request
  ContentUpdateHierarchyContentObject:
    title: Content Update Hierarchy Object
    type: object
    properties:
      data:
        $ref: '#/definitions/ContentUpdateHierarchyObject'
    required:
      - data
  ContentUpdateHierarchyObject:
    title: Content Update Hierarchy Object
    type: object
    properties:
      nodesModified:
        $ref: '#/definitions/ContentNodesModified'
      hierarchy:
        $ref: '#/definitions/ContentHierarchy'
    required:
      - NodesModified
      - hierarchy
  ContentNodesModified:
    title: Content Update Hierarchy Object
    type: object
    properties:
      dummyNode:
        $ref: '#/definitions/ContentDummyNode'
    required:
      - dummyNode
  ContentDummyNode:
    title: Content Metadata
    type: object
    properties:
      isNew:
        type: boolean
        description: Whether the content is new or existing
      root:
        type: boolean
        description: Whether the content is root node
      metadata:
        $ref: '#/definitions/ContentUpdateObject'
    required:
      - metadata
  ContentHierarchy:
    title: Content Hierarchy
    type: object
    properties:
      dummyNode:
        $ref: '#/definitions/DummyNodeHierarchy'
    required:
      - dummyNode
  DummyNodeHierarchy:
    title: Dummy Node Hierarchy
    type: object
    properties:
      name:
        type: string
        description: Name of the content
      contentType:
        type: string
        description: contentType of the content
      root:
        type: boolean
        description: Whether the contetn is root
      children:
        type: array
        description: children of the content
        items:
          type: string
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ContentUploadResponse:
    description: Upload Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeIdAndUrl'
      - $ref: '#/definitions/ResponseHeader'
  ContentSearchResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithContentList'
      - $ref: '#/definitions/ResponseHeader'
  ContentUpdateHierarchyResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultUpdateHierarchy'
      - $ref: '#/definitions/ResponseHeader'
  ResultUpdateHierarchy:
    title: Result - Content Update Hierarchy
    type: object
    properties:
      result:
        $ref: '#/definitions/ResultUpdateHierarchyMap'
    required:
      - result
  ResultUpdateHierarchyMap:
    title: Result - Content Update Hierarchy
    type: object
    properties:
      content_id:
        type: string
        description: Parent content id
      identifiers:
        $ref: '#/definitions/NewContentMap'
  NewContentMap:
    title: Newly created content
    type: object
    properties:
      dummyNode:
        type: string
        description: Dummy Node Id
  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ResultWithNodeIdAndUrl:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeIdAndUrl'
  ResultWithContentList:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/ContentList'
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
      versionKey:
        type: string
        description: Content version key
  NodeIdAndUrl:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
      versionKey:
        type: string
        description: Content version key
      content_url:
        type: string
        description: Content URL link
  ContentList:
    title: Content List
    type: object
    properties:
      count:
        type: number
        description: Number of content searched
      content:
        type: array
        description: Content object list
        items:
          type: object
  ContentGetResponse:
    description: Get Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithContent'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithContent:
    title: Result Containing Content Object
    type: object
    properties:
      result:
        $ref: '#/definitions/ContentObject'
  ContentObject:
    title: Result Containing Content Object
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentProperties'
  ContentProperties:
    title: Node Id
    type: object
    properties:
      identifier:
        type: string
        description: It represents the Node 
      name:
        type: string
        description: It is the name given to a node
      code:
        type: string
        description: It is the Node that is associated with a specific node
      keywords:
        type: array
        items:
          type: string
        description: It represents the Keywords associated with a node
      downloadUrl:
        type: string
        description: It is the Ecar S3 link, which can be used for dowmnloading the Ecar
      channel:
        type: string
        description: Represents the channel with which the content is associated
      description:
        type: string
        description: It denotes the description of content
      language:
        type: string
        description: Represents the language of the content
      variants:
        type: object
        description: represents the content variants based on medium of language 
      mimeType:
        type: string
        description: Represents the mimetype of the content
      idealScreenSize:
        type: string
        description: Represents the ideal screen size of content
      createdOn:
        type: string
        description: Represents the content creation date 
      collections:
        type: array
        items:
          type: object
        description: Represents the collections that are associated with content
      children:
        type: array
        items:
          type: object
        description: Represents the children (node) associated with the content
      appId:
        type: string
        description: Represents the associated application Id
      contentDisposition:
        type: string
        description: Represents how the content is placed or arranged, especially in relation to other content
      contentEncoding:
        type: string
        description: Represents the format of content encoding
      lastUpdatedOn:
        type: string
        description: Represents the date on which content was last updated
      mimeTypesCount:
        type: string
        description: Represents the count of  mimetypes in associated contents
      contentType:
        type: string
        description: Represents the type of content
      lastUpdatedBy:
        type: string
        description: Represents the user who updated the content previously
      audience:
        type: array
        items:
          type: string
        description: Represents the audience of the content
      toc_url:
        type: string
        description: Represents the S3 url of table of contents of a content file
      visibility:
        type: string
        description: Represents the visibility mode of the content
      os:
        type: string
        description: Represents the type of Operating system
      contentTypesCount:
        type: string
        description: Gives the count of different content types within the associated content
      childNodes:
        type: array
        items:
          type: string
        description: Lists the child nodes asociated with content
      consumerId:
        type: string
        description: It is the unique Id for consumers
      mediaType:
        type: string
        description: Represents the MediaType of the content
      osId:
        type: string
        description: Represents the Operating system Identifier
      lastPublishedBy:
        type: string
        description: Represents the date on which content was last published
      pkgVersion:
        type: string
        description: Represents the version of content package usually the last built package 
      versionKey:
        type: string
        description: Represents the version number that was generated after last update
      tags:
        type: array
        items:
          type: string
        description: Denotes the tags that are associated with the content
      prevState:
        type: string
        description: Represents the previous state of the content
      idealScreenDensity:
        type: string
        description: Represents the Ideal Screen density
      s3Key:
        type: string
        description: Represents the S3 relative path of Ecar file
      framework:
        type: string
        description: Represents which framework was used to create the content
      size:
        type: integer
        description: Represents the size of content
      lastPublishedOn:
        type: string
        description: Represents the date on which the content was last published
      leafNodesCount:
        type: integer
        description: Represents the total number of leaf nodes against the collection content
      compatibilityLevel:
        type: integer
        description: Represents the compatibility Level 
      publisher:
        type: string
        description: Represents who is the publisher of the content
      usedByContent:
        type: array
        items:
          type: string
        description: Represents the user whi used the content last time 
      resourceType:
        type: string
        description: Represents the type of the content
      status:
        type: string
        description: Represents the status of the content
      license:
        type: string
        description: Represents the youtube licence value 
      previewUrl:
        type: string
        description: Represents the preview Url link
      artifactUrl:
        type: string
        description: Represents the artifact Url link
      languageCode:
        type: string
        description: Represents the language Code
      lastSubmittedOn:
        type: string
        description: Represents the date for last Submitted On
      flagReasons:
        type: array
        description: Represents the Reasons of the flag
        items:
          type: string
      flaggedBy:
        type: array
        description: Represents the flaggedBy user
        items:
          type: string
      badgesList:
        type: object
        description: Represents the flaggedBy user
      downloads:
        type: number
        description: Represents the flaggedBy user
      pragma:
        type: array
        description: Represents the pragma
        items:
          type: string
      subject:
        type: string
        description: Represents the subject of the content
      medium:
        type: string
        description: Represents the medium of the content
  ContentHierarchyGetResponse:
    title: Get Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithContentHierarchyResponse'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithContentHierarchyResponse:
    title: Result Containing Content Object
    type: object
    properties:
      result:
        $ref: '#/definitions/ContentHierarchyResponseObject'
  ContentHierarchyResponseObject:
    title: Response Hierarchy Content Object
    type: object
    properties:
      content:
        $ref: '#/definitions/ContentProperties'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: Represents the unique API Identifier
      ver:
        type: string
        description: Represents the API version information
      ts:
        type: string
        description: Represents the API execution span
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'Represents the API response code '
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Represents the Id of the response
      msgid:
        type: string
        description: Represents the unique Id of the response message
      err:
        type: string
        description: Represents the Error Code if the execution fails
      status:
        type: string
        description: Represents the Response status when an API is called
      errmsg:
        type: string
        description: Represents the text that comes as a part of response status
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
