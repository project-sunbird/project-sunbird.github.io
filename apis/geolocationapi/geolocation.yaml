swagger: '2.0'
info:
  version: '1.0'
  title: Geo-location API(s)
  description: >- 
    Geo-location resources API classifies the organisation on the basis of their location. 
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
basePath: /org/v1/location
securityDefinitions:
    auth:
      type: apiKey  # arbitrary name for the security scheme
      in: header # The security scheme parameter is in "header"
      name: Authorization # name of the header, query parameter or cookie
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /create:
    post:
      description: >-
       This API is used for creating a new Geo-location of an organisation.
          - The **_/create_** endpoint executes the "create location" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Create a Geo-location
      tags: 
        - Geolocation APIs
      operationId: CreatePost
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          required: true
          description: >-
              The body refers to the format of the request.
                - The body contains metadata about the request for creating Geo-location.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiRequest'
              - $ref: '#/definitions/CreateLocationrequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content Type entity is the media type of the resource.
              Possible media types can be:- 
                - Application/json
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'All User APIs requires authorization for use. Specify the authorization key received from the administrator when placing the request to use the API.'
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK! Successful operation. "Create Geolocation" operation was successfully executed.'
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/CreateGeolocationResponse'
        '400':
          description: >-
            BAD REQUEST, **Create Geolocation** operation failed! The possible reason for failure is that you may have missed providing input for a mandatory parameter.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        
        '404':
          description: >-
            Resource not found, **Create Geolocation** operation failed! The possible reason for failure is that the requested resource could not be found.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        '500':
          description: >-
            INTERNAL SERVER ERROR! Looks like something went wrong! These errors are tracked automatically. If the problem persists, please feel free to contact us. In the meantime, you may try again.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /create
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >2-
              {

            "request": {

              "rootOrgId": "0123668063921192960",

                   "data":[

                         {

                         "location":"name of location",

                         "type":"location type optional"

                        },

                        {

                         "location":"name of location",

                         "type":"location type optional"

                        }

                      ]

            }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Location
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  /update/{locationId}:
    patch:
      description: >-
       This API is used for updating a Geo-location of an organisation
          - The **_/update/{locationId}_** endpoint executes the "update location" request based on parameters provided as metadata in the request body
          -  {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Updates a Geo-location
      tags: 
        - Geolocation APIs
      operationId: V1LocationUpdateByLocationIdPatch
      produces:
      - application/json
      parameters:
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Please append a valid location Id to the request URL' 
        - name: request
          in: body
          required: true
          description:  >-
              The body refers to the format of the request.
                - The body contains metadata about the request for updating Geo-location.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiRequest'
              - $ref: '#/definitions/UpdateGeolocationRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content Type entity is the media type of the resource.
              Possible media types can be:- 
                - Application/json
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of any User API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK! Successful operation. "Update Geolocation" operation was successfully executed.'
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/UpdateGeolocationResponse'
        '400':
          description: >-
            BAD REQUEST, **Update Geolocation** operation failed! The possible reason for failure is that you may have missed providing input for a mandatory parameter.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        
        '404':
          description: >-
            Resource not found, **Update Geolocation** operation failed! The possible reason for failure is that the requested resource could not be found.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        '500':
          description: >-
            INTERNAL SERVER ERROR! Looks like something went wrong! These errors are tracked automatically. If the problem persists, please feel free to contact us. In the meantime, you may try again.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  /delete/{locationId}:
    delete:
      description: >-
       This API is used for deleting the corresponding Geo-location of an organisation.
          - The **_/delete/{locationId}_** endpoint executes the "delete location" request based on parameters provided as metadata in the request body
          - {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Delete a Geolocation
      tags: 
        - Geolocation APIs
      operationId: LocationDelete
      produces:
        - application/json
      parameters:
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Please append a valid location Id to the Request URL' 
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content Type entity is the media type of the resource.
              Possible media types can be:- 
                - Application/json
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK! Successful operation. "Delete Geolocation" operation was successfully executed.'
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/DeleteGeolocationResponse'
        '400':
          description: >-
            BAD REQUEST, **Delete Geolocation** operation failed! The possible reason for failure is that you may have missed providing input for a mandatory parameter.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        
        '404':
          description: >-
            Resource not found, **Delete Geolocation** operation failed! The possible reason for failure is that the requested resource could not be found.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        '500':
          description: >-
            INTERNAL SERVER ERROR! Looks like something went wrong! These errors are tracked automatically. If the problem persists, please feel free to contact us. In the meantime, you may try again.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: DELETE
          uri: /delete/0123667529089925122
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Location
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  /read/{id}:
    get:
      description:  >-
       This API is used for fetching a Geo-location of an organisation on Sunbird platform.
          - The **_/read/{locationId}_** endpoint executes the "fetch Geo-location" request based on parameters provided as metadata in the request body
          -  {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Get Geolocation details
      tags: 
        - Geolocation APIs
      operationId: Get
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: 'Location ID OR Tenant ID should be appended here' 
        - name: type
          in: query
          required: true
          type: string
          description: >-
            The type can be either be Tenant ID or Location ID, depending on which one is appended in request path
              - organisation
              - location
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content Type entity is the media type of the resource.
              Possible media types can be:- 
                - Application/json
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of any User API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
        - name: x-authenticated-user-token
          in: header
          required: true
          type: string
          description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK! Successful operation. "Get Geolocation" operation was successfully executed.'
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/GetGeolocationResponse'
        '400':
          description: >-
            BAD REQUEST, **Get Geolocation** operation failed! The possible reason for failure is that you may have missed providing input for a mandatory parameter.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        
        '404':
          description: >-
            Resource not found, **Get Geolocation** operation failed! The possible reason for failure is that the requested resource could not be found.
          schema:
             allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
        '500':
          description: >-
            INTERNAL SERVER ERROR! Looks like something went wrong! These errors are tracked automatically. If the problem persists, please feel free to contact us. In the meantime, you may try again.
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/project-sunbird/project-sunbird.github.io/dev/apis/definitions/envelope.yaml#/ApiResponse'
              - $ref: '#/definitions/ErrorResponse'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /read/01240144028287795224?type=organisation
          headers:
            Content-Type: application/json
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get Geo Location By Id
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

definitions:
  ErrorResponse:
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'

  EmptyResult:
    type: object
    properties:
      result:
        type: object

  CreateLocationrequest:
    type: object
    properties:
      request:
        type: object
        properties:
          rootOrgId:
            type: string
            description: Tenant ID
          data:
            type: array
            items:
              type: object
              properties:
                location:
                  type: string
                  description: Name of the Geolocation to be create
                type:
                  type: string
                  description: Type of Geolocation depends on how the Tenant wants to categorize their Geo-locations. Possible values for an administrative tenant may be 'district', 'block' etc 
              required:
                - location
                - type
        required:
          - rootOrgId
          - data
    required:
    - request

  CreateGeolocationResponse:
    type: object
    properties:
      result:
        type: object
        properties:
          response:
            type: array
            items:
              type: object
              properties:
                location:
                  type: string
                id:
                  type: string
                status:
                  type: string
              required:
                - location
                - id
                - status
        required:
          - response

  UpdateGeolocationRequest:
    type: object
    properties:
      request:
        type: object
        properties:
          location:
            type: string
          type:
            type: string
    required:
    - request

  UpdateGeolocationResponse:
    type: object
    properties:
      result:
        type: object
        properties:
          response:
            type: string
        required:
          - response
    required:
      - result
  
  DeleteGeolocationResponse:
    type: object
    properties:
      result:
        type: object
        properties:
          response:
            type: string
        required:
          - response
    required:
      - result

  GetGeolocationResponse:
    type: object
    properties:
      result:
        type: object
        properties:
          response:
            type: array
            items:
              type: object
              properties:
                createdDate:
                  type: string
                updatedBy:
                  type: string
                  description: Unique ID of the user who updated this location
                userCount:
                  type: integer
                  format: int32
                  description: Number of users associated with this location
                createdBy:
                  type: string
                  description: Unique ID of the user who created this location
                userCountTTL:
                  type: string
                  description: TTL to refresh associated user count
                topic:
                  type: string
                  description: The FCM topic ID associated with the location 
                location:
                  type: string
                  description: Name of the location
                id:
                  type: string
                updatedDate:
                  type: string
                type:
                  type: string
                rootOrgId:
                  type: string
                  description: Tenant ID
        required:
          - response
    required:
      - result
