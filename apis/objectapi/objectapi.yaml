swagger: '2.0'
info:
  version: '1.0'
  title: Object API(s)
  description: >- 
    The Object API resource is used to store the data.
      - Primarily supports data storage and other related operation.
      - Allows you to define your own repository inside sunbird and use the same to perform operations on data.
      - an object can be used in different contexts, it depends on how it is implemented
      - Each object entity has its own unique payload request parameters
      - Refer to the relevant documentation on Sunbird website for getting the exact object payload parameters 
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /v1/object
securityDefinitions:
    auth:
      type: apiKey  # arbitrary name for the security scheme
      in: header # The security scheme parameter is in "header"
      name: Authorization # name of the header, query parameter or cookie
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /update:
    post:
      description: >-
       This API is associated with updating an object  of an organisation on Sunbird platform.
          - The **_/update_** endpoint executes the "update object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Update Object
      operationId: UpdatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for updating the object.
        schema:
          $ref: '#/definitions/UpdateObjectrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."update object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "update object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /update
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

              "id": "",

                "ts": "",

                "params": { },

                "request":{

                  "entityName":"announcement",

                  "indexed":true,

                  "payload" : {

                    "id": "8e27cbf5-e299-43b0-bca7-8347f7e5abcf",

                    "userid":"8e27cbf5-e299-43b0-bca7",

                    "sourceid":"sourceId",

                    "details":{

                    "filename":"name"

                  },

                  "links":["asd","asdf"],

                  "attachments":["kjaslkdlk"],

                  "sentcount":1

                  }

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Update Object
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /create:
    post:
      description: >-
       This API is associated with creating an object.
          - The **_/create_** endpoint executes the "create object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Create Object
      operationId: CreatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for creating an object.
        schema:
          $ref: '#/definitions/CreateObjectrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."create an object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "create an object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /create
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

                "id": "",

                "ts": "",

                "params": { },

                "request":{

                    "entityName":"announcement",

                    "indexed":true,

                    "payload" : {

                      "id": "8e27cbf5-e299-43b0-bca7-8347f7e5abcf",

                        "userid":"8e27cbf5-e299-43b0-bca7",

                        "sourceid":"sourceId",

                        "details":{

                      "filename":"name"

                    },

                    "links":["asd","asdf"],

                    "attachments":["kjaslkdlk"],

                    "sentcount":1

                    }

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Object
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /read/list:
    post:
      description: >-
       This API is associated with listing objects.
          - The **_/read/list_** endpoint executes the "list object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: List Objects
      operationId: ReadListPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for listing objects.
        schema:
          $ref: '#/definitions/ListObjectsrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."list object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "list object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /read/list
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

              "id": "",

              "ts": "",

              "params": { },

              "request":{

                  "entityName":"announcement"

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List Objects
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /read:
    post:
      description: >-
       This API is associated with fetching and reading an object data.
          - The **_/read_** endpoint executes the " read object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Read/Get Object
      operationId: ReadPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for reading object data.
        schema:
          $ref: '#/definitions/Read~1getObjectrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."read object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "read object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /read
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

              "id": "",

              "ts": "",

              "params": { },

                "request":{

                  "entityName":"announcement",

                "id": "8e27cbf5-e299-43b0-bca7-8347f7e5abcf"

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Read/Get Object
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /metrics:
    post:
      description: >-
       This Metrics resources API offers the ability to retrieve statistics on objects, counter and availability of objects.
          - The **_/metrics_** endpoint executes the "update object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Object Metrics
      operationId: MetricsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for retrieving metrics related to an object.
        schema:
          $ref: '#/definitions/MetricsApirequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."retrieving metrics" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "retrieving metrics" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /metrics
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {
              "id": "",
              "ts": "",
              "params": {},
              "request": {
                "entityName": "announcement",
                "rawQuery": {
                  "from": 0,
                  "size": 250,
                  "query": {
                    "bool": {
                      "must": [
                        {
                          "term": {
                            "batchId.raw": {
                              "value": "jkwf6t3r083fp4h",
                              "boost": 1
                            }
                          }
                        }
                      ],
                      "disable_coord": false,
                      "adjust_pure_negative": true,
                      "boost": 1
                    }
                  },
                  "_source": {
                    "includes": [
                      "userId",
                      "progress",
                      "enrolledDate",
                      "batchId",
                      "dateTime"
                    ],
                    "excludes": []
                  },
                  "aggs": {
                    "status": {
                      "terms": {
                        "field": "status.raw",
                        "include": [
                          "1",
                          "2",
                          "review"
                        ]
                      },
                      "aggs": {
                        "updated_on": {
                          "date_histogram": {
                            "field": "lastUpdatedOn",
                            "interval": "1d",
                            "format": "yyyy-MM-dd"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Metrics API
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /delete:
    post:
      description: >-
       This API is associated with deleting an object.
          - The **_/delete_** endpoint executes the "delete object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Delete Object
      operationId: DeletePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for deleting an object.
        schema:
          $ref: '#/definitions/DeleteObjectrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."delete object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "delete object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /delete
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

              "id": "",

              "ts": "",

              "params": { },

                "request":{

                    "entityName":"announcement",

                "indexed":"announcement",

                "id": "8e27cbf5-e299-43b0-bca7-8347f7e5abcf"

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Object
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /search:
    post:
      description: >-
       This API is associated with searching an object
          - The **_/search_** endpoint executes the "update object" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty'
      summary: Search Object
      operationId: SearchPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for searching an object.
        schema:
          $ref: '#/definitions/SearchObjectrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."search object" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "search object" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /search
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

              "id": "",

              "ts": "",

              "params": { },

                "request":{

                  "query": "ORG_TYPE",

                  "entityName":"org_type",

                "filters":{

                  "id":"98765432110"

                },

                "offset": 0,

                "limit": 5

                }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Search Object
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  UpdateObjectrequest:
    title: Update ObjectRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
        indexed: true
        payload:
          id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
          userid: {{userId}}
          sourceid: sourceId
          details:
            filename: name
          links:
          - asd
          - asdf
          attachments:
          - kjaslkdlk
          sentcount: 1
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request'
        example:
          entityName: announcement
          indexed: true
          payload:
            id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            userid: {{userId}}
            sourceid: sourceId
            details:
              filename: name
            links:
            - asd
            - asdf
            attachments:
            - kjaslkdlk
            sentcount: 1
    required:
    - id
    - ts
    - params
    - request
  Request:
    title: Request
    example:
      entityName: announcement
      indexed: true
      payload:
        id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
        userid: {{userId}}
        sourceid: sourceId
        details:
          filename: name
        links:
        - asd
        - asdf
        attachments:
        - kjaslkdlk
        sentcount: 1
    type: object
    properties:
      entityName:
        description: ''
        example: announcement
        type: string
      indexed:
        description: ''
        example: true
        type: boolean
      payload:
        $ref: '#/definitions/Payload'
        example:
          id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
          userid: {{userId}}
          sourceid: sourceId
          details:
            filename: name
          links:
          - asd
          - asdf
          attachments:
          - kjaslkdlk
          sentcount: 1
    required:
    - entityName
    - indexed
    - payload
  Payload:
    title: Payload
    example:
      id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
      userid: {{userId}}
      sourceid: sourceId
      details:
        filename: name
      links:
      - asd
      - asdf
      attachments:
      - kjaslkdlk
      sentcount: 1
    type: object
    properties:
      id:
        description: ''
        example: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
        type: string
      userid:
        description: ''
        example: 8e27cbf5-e299-43b0-bca743
        type: string
      sourceid:
        description: ''
        example: sourceId
        type: string
      details:
        $ref: '#/definitions/Details'
        example:
          filename: name
      links:
        description: ''
        example:
        - asd
        - asdf
        type: array
        items:
          type: string
      attachments:
        description: ''
        example:
        - kjaslkdlk
        type: array
        items:
          type: string
      sentcount:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - id
    - userid
    - sourceid
    - details
    - links
    - attachments
    - sentcount
  Details:
    title: Details
    example:
      filename: name
    type: object
    properties:
      filename:
        description: ''
        example: name
        type: string
    required:
    - filename
  CreateObjectrequest:
    title: Create ObjectRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
        indexed: true
        payload:
          id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
          userid: 8e27cbf5-e2993-43b05-bca7322
          sourceid: sourceId
          details:
            filename: name
          links:
          - asd
          - asdf
          attachments:
          - kjaslkdlk
          sentcount: 1
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request'
        example:
          entityName: announcement
          indexed: true
          payload:
            id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            userid: 8e27cbf5-e299-43b04-bca755
            sourceid: sourceId
            details:
              filename: name
            links:
            - asd
            - asdf
            attachments:
            - kjaslkdlk
            sentcount: 1
    required:
    - id
    - ts
    - params
    - request
  ListObjectsrequest:
    title: List ObjectsRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request9'
        example:
          entityName: announcement
    required:
    - id
    - ts
    - params
    - request
  Request9:
    title: Request9
    example:
      entityName: announcement
    type: object
    properties:
      entityName:
        description: ''
        example: announcement
        type: string
    required:
    - entityName
  Read/getObjectrequest:
    title: Read/Get ObjectRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
        id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request11'
        example:
          entityName: announcement
          id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    required:
    - id
    - ts
    - params
    - request
  Request11:
    title: Request11
    example:
      entityName: announcement
      id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    type: object
    properties:
      entityName:
        description: ''
        example: announcement
        type: string
      id:
        description: ''
        example: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
        type: string
    required:
    - entityName
    - id
  MetricsApirequest:
    title: Metrics APIRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
        rawQuery:
          from: 0
          size: 250
          query:
            bool:
              must:
              - term:
                  batchId.raw:
                    value: jkwf6t3r083fp4h
                    boost: 1
              disable_coord: false
              adjust_pure_negative: true
              boost: 1
          _source:
            includes:
            - userId
            - progress
            - enrolledDate
            - batchId
            - dateTime
            excludes: []
          aggs:
            status:
              terms:
                field: status.raw
                include:
                - 1
                - 2
                - review
              aggs:
                updated_on:
                  date_histogram:
                    field: lastUpdatedOn
                    interval: 1d
                    format: yyyy-MM-dd
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request13'
        example:
          entityName: announcement
          rawQuery:
            from: 0
            size: 250
            query:
              bool:
                must:
                - term:
                    batchId.raw:
                      value: jkwf6t3r083fp4h
                      boost: 1
                disable_coord: false
                adjust_pure_negative: true
                boost: 1
            _source:
              includes:
              - userId
              - progress
              - enrolledDate
              - batchId
              - dateTime
              excludes: []
            aggs:
              status:
                terms:
                  field: status.raw
                  include:
                  - 1
                  - 2
                  - review
                aggs:
                  updated_on:
                    date_histogram:
                      field: lastUpdatedOn
                      interval: 1d
                      format: yyyy-MM-dd
    required:
    - id
    - ts
    - params
    - request
  Request13:
    title: Request13
    example:
      entityName: announcement
      rawQuery:
        from: 0
        size: 250
        query:
          bool:
            must:
            - term:
                batchId.raw:
                  value: jkwf6t3r083fp4h
                  boost: 1
            disable_coord: false
            adjust_pure_negative: true
            boost: 1
        _source:
          includes:
          - userId
          - progress
          - enrolledDate
          - batchId
          - dateTime
          excludes: []
        aggs:
          status:
            terms:
              field: status.raw
              include:
              - 1
              - 2
              - review
            aggs:
              updated_on:
                date_histogram:
                  field: lastUpdatedOn
                  interval: 1d
                  format: yyyy-MM-dd
    type: object
    properties:
      entityName:
        description: ''
        example: announcement
        type: string
      rawQuery:
        $ref: '#/definitions/RawQuery'
        example:
          from: 0
          size: 250
          query:
            bool:
              must:
              - term:
                  batchId.raw:
                    value: jkwf6t3r083fp4h
                    boost: 1
              disable_coord: false
              adjust_pure_negative: true
              boost: 1
          _source:
            includes:
            - userId
            - progress
            - enrolledDate
            - batchId
            - dateTime
            excludes: []
          aggs:
            status:
              terms:
                field: status.raw
                include:
                - 1
                - 2
                - review
              aggs:
                updated_on:
                  date_histogram:
                    field: lastUpdatedOn
                    interval: 1d
                    format: yyyy-MM-dd
    required:
    - entityName
    - rawQuery
  RawQuery:
    title: RawQuery
    example:
      from: 0
      size: 250
      query:
        bool:
          must:
          - term:
              batchId.raw:
                value: jkwf6t3r083fp4h
                boost: 1
          disable_coord: false
          adjust_pure_negative: true
          boost: 1
      _source:
        includes:
        - userId
        - progress
        - enrolledDate
        - batchId
        - dateTime
        excludes: []
      aggs:
        status:
          terms:
            field: status.raw
            include:
            - 1
            - 2
            - review
          aggs:
            updated_on:
              date_histogram:
                field: lastUpdatedOn
                interval: 1d
                format: yyyy-MM-dd
    type: object
    properties:
      from:
        description: ''
        example: 0
        type: integer
        format: int32
      size:
        description: ''
        example: 250
        type: integer
        format: int32
      query:
        $ref: '#/definitions/Query'
        example:
          bool:
            must:
            - term:
                batchId.raw:
                  value: jkwf6t3r083fp4h
                  boost: 1
            disable_coord: false
            adjust_pure_negative: true
            boost: 1
      _source:
        $ref: '#/definitions/Source'
        example:
          includes:
          - userId
          - progress
          - enrolledDate
          - batchId
          - dateTime
          excludes: []
      aggs:
        $ref: '#/definitions/Aggs'
        example:
          status:
            terms:
              field: status.raw
              include:
              - 1
              - 2
              - review
            aggs:
              updated_on:
                date_histogram:
                  field: lastUpdatedOn
                  interval: 1d
                  format: yyyy-MM-dd
    required:
    - from
    - size
    - query
    - _source
    - aggs
  Query:
    title: Query
    example:
      bool:
        must:
        - term:
            batchId.raw:
              value: jkwf6t3r083fp4h
              boost: 1
        disable_coord: false
        adjust_pure_negative: true
        boost: 1
    type: object
    properties:
      bool:
        $ref: '#/definitions/Bool'
        example:
          must:
          - term:
              batchId.raw:
                value: jkwf6t3r083fp4h
                boost: 1
          disable_coord: false
          adjust_pure_negative: true
          boost: 1
    required:
    - bool
  Bool:
    title: Bool
    example:
      must:
      - term:
          batchId.raw:
            value: jkwf6t3r083fp4h
            boost: 1
      disable_coord: false
      adjust_pure_negative: true
      boost: 1
    type: object
    properties:
      must:
        description: ''
        example:
        - term:
            batchId.raw:
              value: jkwf6t3r083fp4h
              boost: 1
        type: array
        items:
          $ref: '#/definitions/Must'
      disable_coord:
        description: ''
        example: false
        type: boolean
      adjust_pure_negative:
        description: ''
        example: true
        type: boolean
      boost:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - must
    - disable_coord
    - adjust_pure_negative
    - boost
  Must:
    title: Must
    example:
      term:
        batchId.raw:
          value: jkwf6t3r083fp4h
          boost: 1
    type: object
    properties:
      term:
        $ref: '#/definitions/Term'
        example:
          batchId.raw:
            value: jkwf6t3r083fp4h
            boost: 1
    required:
    - term
  Term:
    title: Term
    example:
      batchId.raw:
        value: jkwf6t3r083fp4h
        boost: 1
    type: object
    properties:
      batchId.raw:
        $ref: '#/definitions/BatchIdRaw'
        example:
          value: jkwf6t3r083fp4h
          boost: 1
    required:
    - batchId.raw
  BatchIdRaw:
    title: BatchIdRaw
    example:
      value: jkwf6t3r083fp4h
      boost: 1
    type: object
    properties:
      value:
        description: ''
        example: jkwf6t3r083fp4h
        type: string
      boost:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - value
    - boost
  Source:
    title: Source
    example:
      includes:
      - userId
      - progress
      - enrolledDate
      - batchId
      - dateTime
      excludes: []
    type: object
    properties:
      includes:
        description: ''
        example:
        - userId
        - progress
        - enrolledDate
        - batchId
        - dateTime
        type: array
        items:
          type: string
      excludes:
        description: ''
        example: []
        type: array
        items:
          type: string
    required:
    - includes
    - excludes
  Aggs:
    title: Aggs
    example:
      status:
        terms:
          field: status.raw
          include:
          - 1
          - 2
          - review
        aggs:
          updated_on:
            date_histogram:
              field: lastUpdatedOn
              interval: 1d
              format: yyyy-MM-dd
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
        example:
          terms:
            field: status.raw
            include:
            - 1
            - 2
            - review
          aggs:
            updated_on:
              date_histogram:
                field: lastUpdatedOn
                interval: 1d
                format: yyyy-MM-dd
    required:
    - status
  Status:
    title: Status
    example:
      terms:
        field: status.raw
        include:
        - 1
        - 2
        - review
      aggs:
        updated_on:
          date_histogram:
            field: lastUpdatedOn
            interval: 1d
            format: yyyy-MM-dd
    type: object
    properties:
      terms:
        $ref: '#/definitions/Terms'
        example:
          field: status.raw
          include:
          - 1
          - 2
          - review
      aggs:
        $ref: '#/definitions/Aggs24'
        example:
          updated_on:
            date_histogram:
              field: lastUpdatedOn
              interval: 1d
              format: yyyy-MM-dd
    required:
    - terms
    - aggs
  Terms:
    title: Terms
    example:
      field: status.raw
      include:
      - 1
      - 2
      - review
    type: object
    properties:
      field:
        description: ''
        example: status.raw
        type: string
      include:
        description: ''
        example:
        - 1
        - 2
        - review
        type: array
        items:
          type: string
    required:
    - field
    - include
  Aggs24:
    title: Aggs24
    example:
      updated_on:
        date_histogram:
          field: lastUpdatedOn
          interval: 1d
          format: yyyy-MM-dd
    type: object
    properties:
      updated_on:
        $ref: '#/definitions/UpdatedOn'
        example:
          date_histogram:
            field: lastUpdatedOn
            interval: 1d
            format: yyyy-MM-dd
    required:
    - updated_on
  UpdatedOn:
    title: UpdatedOn
    example:
      date_histogram:
        field: lastUpdatedOn
        interval: 1d
        format: yyyy-MM-dd
    type: object
    properties:
      date_histogram:
        $ref: '#/definitions/DateHistogram'
        example:
          field: lastUpdatedOn
          interval: 1d
          format: yyyy-MM-dd
    required:
    - date_histogram
  DateHistogram:
    title: DateHistogram
    example:
      field: lastUpdatedOn
      interval: 1d
      format: yyyy-MM-dd
    type: object
    properties:
      field:
        description: ''
        example: lastUpdatedOn
        type: string
      interval:
        description: ''
        example: 1d
        type: string
      format:
        description: ''
        example: yyyy-MM-dd
        type: string
    required:
    - field
    - interval
    - format
  DeleteObjectrequest:
    title: Delete ObjectRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        entityName: announcement
        indexed: announcement
        id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request28'
        example:
          entityName: announcement
          indexed: announcement
          id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    required:
    - id
    - ts
    - params
    - request
  Request28:
    title: Request28
    example:
      entityName: announcement
      indexed: announcement
      id: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
    type: object
    properties:
      entityName:
        description: ''
        example: announcement
        type: string
      indexed:
        description: ''
        example: announcement
        type: string
      id:
        description: ''
        example: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
        type: string
    required:
    - entityName
    - indexed
    - id
  SearchObjectrequest:
    title: Search ObjectRequest
    example:
      id: ''
      ts: ''
      params: {}
      request:
        query: ORG_TYPE
        entityName: org_type
        filters:
          id: 98765432110
        offset: 0
        limit: 5
    type: object
    properties:
      id:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request30'
        example:
          query: ORG_TYPE
          entityName: org_type
          filters:
            id: 98765432110
          offset: 0
          limit: 5
    required:
    - id
    - ts
    - params
    - request
  Request30:
    title: Request30
    example:
      query: ORG_TYPE
      entityName: org_type
      filters:
        id: 98765432110
      offset: 0
      limit: 5
    type: object
    properties:
      query:
        description: ''
        example: ORG_TYPE
        type: string
      entityName:
        description: ''
        example: org_type
        type: string
      filters:
        $ref: '#/definitions/Filters'
        example:
          id: 98765432110
      offset:
        description: ''
        example: 0
        type: integer
        format: int32
      limit:
        description: ''
        example: 5
        type: integer
        format: int32
    required:
    - query
    - entityName
    - filters
    - offset
    - limit
  Filters:
    title: Filters
    example:
      id: 98765432110
    type: object
    properties:
      id:
        description: ''
        example: 98765432110
        type: string
    required:
    - id

  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
