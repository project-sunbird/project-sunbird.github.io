swagger: '2.0'
info:
  version: '1.0'
  title: Sunbird Metrics API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  contact:
    email: admin@open-sunbird.org
  description: >-
    The Metrics resources analyze sunbird's overall performance and efficiency.These resources perform operations related to 
      the _metrics_ on the Sunbird Platform. The metrics resource performs various operations related to content consumption, Content Snapshot aggregation, 
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /api/v1
securityDefinitions:
    auth:
      type: apiKey  # arbitrary name for the security scheme
      in: header # The security scheme parameter is in "header"
      name: Authorization # name of the header, query parameter or cookie
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /consumption/content-usage:
    post:
      description: >-
          This API keeps track on how content is being used on the Sunbird Platform.
            -  The **_/consumption/content-usage_** endpoint executes "Metrics - Content Usage" request based on parameters provided as metadata in the request body.
            - The Usage resource helps to demonstrate the impact in consumption and prioritize efforts.Also, the Usage metrics may show that one of the reports is used daily by a huge segment of the users and it may show that a dashboard created isn't being viewed at all.
            - It is mandatory to provide values for parameters marked with *. 
            - Mandatory fields cannot be null or empty.
      summary: Analyses Content Usage
      tags:
      - Metrics APIs
      operationId: Metrics - Content Usage
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description:  >-
            The body refers to the format of the request.
              - The body contains metadata about the content usage.
        schema:
          $ref: '#/definitions/Metrics  content usagerequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description:  >-
            The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      responses:
        '200':
          description: 'OK ! Successful operation."Metrics - Content Usage" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Metrics - Content Usage" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.' 
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /consumption/content-usage
          headers:
            Content-Type: application/json
          body: >-
            {
                "id": "org.ekstep.analytics.metrics",
                "ver": "1.0",
                "ts": "2016-09-12T18:43:23.890+00:00",
                "params": {
                    "msgid": "4f04da60-1e24-4d31-aa7b-1daf91c46341"
                },
                "request": {
                    "period": "LAST_7_DAYS",
                    "filter": {
                        "tag": "4f04da604d31aa7b-1daf91c46341"
                    }
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Metrics - Content Usage
        x-testDescription: Content Usage Metrics
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /tag/register/{Tag_Id}:
    parameters:
      - in: path
        name: Tag_Id
        type: string
        required: true
        description: 'Please append a valid Tag Id To the Request URL'
    post:
      description: >-
          This API registers a Tag Id  on the Sunbird Platform.
            -  The **_/tag/register_** endpoint executes "Tag - Register" request based on parameters provided as metadata in the request body.
            - The register resource uses **Tag Id** for the analysis of content.E.g. whenever a new organisation or a course batch is created, the system creates a particular tag(a string by which the request can be identified uniquely)for that and send data for analytical purposes.
            - It is mandatory to provide values for parameters marked with *. 
            - Mandatory fields cannot be null or empty.
      summary: Registers a Tag Id
      tags:
      - Metrics APIs
      operationId: Tag - Register
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
        schema:
          type: object
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      responses:
        '200':
          description: 'OK ! Successful operation."Tag - Register" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Tag - Register" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.' 
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /tag/register/abc
          headers:
            Content-Type: application/json
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Tag - Register
        x-testDescription: Register a Tag.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /tag/delete/{Tag_Id}:
    parameters:
      - in: path
        name: Tag_Id
        type: string
        required: true
        description: 'Please append a valid Tag Id To the Request URL'
    delete:
      description: >-
          This API registers a Tag Id  on the Sunbird Platform.
            -  The **_/tag/delete_** endpoint executes "Tag - Register" request based on parameters provided as metadata in the request body.
            - The tag/delete/ resource uses specific **Tag Id** provided as a part of request URL for deletion of a specific tag Id.
            - It is mandatory to provide values for parameters marked with *. 
            - Mandatory fields cannot be null or empty.
      summary: Deletes a Tag Id 
      tags:
      - Metrics APIs
      operationId: Tag - Delete
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      responses:
        '200':
          description: 'OK ! Successful operation."Tag - Delete" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Tag - Delete" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.' 
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security: []
      x-unitTests:
      - request:
          method: DELETE
          uri: /tag/delete/abc
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Tag - Delete
        x-testDescription: Delete a Tag.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /creation/content-snapshot:
    post:
      description: >-
          This API provides Content Snapshot in aggregate  on the Sunbird Platform.
            -  The **_/creation/content-snapshot_** endpoint executes "Metrics - Content Snapshot Aggregate" request based on parameters provided as metadata in the request body.
            - An **Aggregate Content Snapshot** is a point-in-time, read-only image. Aggregate Snapshot is created for recording entire aggregated content.The snapshot's content is the same as the master volume at the exact point in time that the snapshot was created. The snapshot remains unchanged, although the master volume keeps changing after the snapshot is created. Upon a successful completion of this command, the snapshot is created and assigned a name that can later be used by other command.
            - It is mandatory to provide values for parameters marked with *. 
            - Mandatory fields cannot be null or empty.Content Snapshot Aggregate Metrics API
      summary: Creates a Content Snapshot Aggregate
      tags:
      - Metrics APIs
      operationId: Metrics - Content Snapshot Aggregate
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
             - The body contains metadata about the metric "content snapshot aggregate".
        schema:
          $ref: '#/definitions/Metrics  content snapshot aggregaterequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      responses:
        '200':
          description: 'OK ! Successful operation."Metrics - Content Snapshot Aggregate" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Metrics - Content Snapshot Aggregate" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.' 
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /creation/content-snapshot
          headers:
            Content-Type: application/json
          body: "{\n    \"id\": \"org.ekstep.analytics.metrics\",\n    \"ver\": \"1.0\",\n    \"ts\": \"2016-09-12T18:43:23.890+00:00\",\n    \"params\": {\n        \"msgid\": \"4f04da60-1e24-4d31-aa7b-1daf91c46341\"\n    },\n    \"request\": {\n        \"period\": \"\", \n        \"rawQuery\": {\n      \"query\": {\n        \"filtered\": {\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"query\": {\n                    \"range\": {\n                      \"lastUpdatedOn\": {\n                        \"gt\": \"2017-07-24T00:00:00.000+0530\",\n                        \"lte\": \"2017-08-01T00:00:00.000+0530\"\n                      }\n                    }\n                  }\n                },\n                {\n                  \"match\": {\n                    \"createdFor.raw\": \"Sunbird\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"size\": 0,\n      \"aggs\": {\n        \"created_on\": {\n          \"date_histogram\": {\n            \"field\": \"lastUpdatedOn\",\n            \"interval\": \"1d\",\n            \"format\": \"yyyy-MM-dd\"\n          }\n        },\n        \"status\": {\n            \"terms\": {\n                \"field\": \"status.raw\",\n                \"include\": [\"draft\", \"live\", \"review\"]\n            },\n            \"aggs\": {\n                \"updated_on\": {\n                    \"date_histogram\": {\n                        \"field\": \"lastUpdatedOn\",\n                        \"interval\": \"1d\",\n                        \"format\": \"yyyy-MM-dd\"\n                    }\n                }\n            }\n        },      \n       \"authors.count\": {\n          \"cardinality\": {\n            \"field\": \"createdBy.raw\",\n            \"precision_threshold\": 100\n          }\n        },\n        \"content_count\": {\n          \"terms\": {\n            \"field\": \"objectType.raw\",\n            \"include\": \"content\"\n          }\n        }\n      }\n    }\n    }\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Metrics - Content Snapshot Aggregate
        x-testDescription: Content Snapshot Aggregate Metrics API
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  Metrics  content usagerequest:
    title: Metrics - Content UsageRequest
    example:
      id: org.ekstep.analytics.metrics
      ver: 1.0
      ts: 2016-09-12T18:43:23.8900000+00:00
      params:
        msgid: 4f04da60-1e24-4d31-aa7b-1daf91c46341
      request:
        period: LAST_7_DAYS
        filter:
          tag: 4f04da604d31aa7b-1daf91c46341
    type: object
    properties:
      id:
        description: ''
        type: string
      ver:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        $ref: '#/definitions/Params'
      request:
        $ref: '#/definitions/Request'
    required:
    - id
    - ver
    - ts
    - params
    - request
  Params:
    title: Params
    type: object
    properties:
      msgid:
        description: ''
        type: string
    required:
    - msgid
  Request:
    title: Request
    type: object
    properties:
      period:
        description: ''
        type: string
      filter:
        $ref: '#/definitions/Filter'
    required:
    - period
    - filter
  Filter:
    title: Filter
    type: object
    properties:
      tag:
        description: ''
        type: string
    required:
    - tag
  Metrics  content snapshot aggregaterequest:
    title: Metrics - Content Snapshot AggregateRequest
    example:
      id: org.ekstep.analytics.metrics
      ver: 1.0
      ts: 2016-09-12T18:43:23.8900000+00:00
      params:
        msgid: 4f04da60-1e24-4d31-aa7b-1daf91c46341
      request:
        period: ''
        rawQuery:
          query:
            filtered:
              query:
                bool:
                  must:
                  - query:
                      range:
                        lastUpdatedOn:
                          gt: 2017-07-23T18:30:00.0000000+00:00
                          lte: 2017-07-31T18:30:00.0000000+00:00
                  - match:
                      createdFor.raw: Sunbird
          size: 0
          aggs:
            created_on:
              date_histogram:
                field: lastUpdatedOn
                interval: 1d
                format: yyyy-MM-dd
            status:
              terms:
                field: status.raw
                include:
                - draft
                - live
                - review
              aggs:
                updated_on:
                  date_histogram:
                    field: lastUpdatedOn
                    interval: 1d
                    format: yyyy-MM-dd
            authors.count:
              cardinality:
                field: createdBy.raw
                precision_threshold: 100
            content_count:
              terms:
                field: objectType.raw
                include: content
    type: object
    properties:
      id:
        description: ''
        type: string
      ver:
        description: ''
        type: string
      ts:
        description: ''
        type: string
      params:
        $ref: '#/definitions/Params'
      request:
        $ref: '#/definitions/Request6'
    required:
    - id
    - ver
    - ts
    - params
    - request
  Request6:
    title: Request6
    type: object
    properties:
      period:
        description: ''
        type: string
      rawQuery:
        $ref: '#/definitions/RawQuery'
    required:
    - period
    - rawQuery
  RawQuery:
    title: RawQuery
    type: object
    properties:
      query:
        $ref: '#/definitions/Query'
      size:
        description: ''
        type: integer
        format: int32
      aggs:
        $ref: '#/definitions/Aggs'
    required:
    - query
    - size
    - aggs
  Query:
    title: Query
    type: object
    properties:
      filtered:
        $ref: '#/definitions/Filtered'
    required:
    - filtered
  Filtered:
    title: Filtered
    type: object
    properties:
      query:
        $ref: '#/definitions/Query10'
    required:
    - query
  Query10:
    title: Query10
    type: object
    properties:
      bool:
        $ref: '#/definitions/Bool'
    required:
    - bool
  Bool:
    title: Bool
    type: object
    properties:
      must:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Must'
    required:
    - must
  Must:
    title: Must
    type: object
    properties:
      query:
        $ref: '#/definitions/Query13'
      match:
        $ref: '#/definitions/Match'
  Query13:
    title: Query13
    type: object
    properties:
      range:
        $ref: '#/definitions/Range'
    required:
    - range
  Range:
    title: Range
    type: object
    properties:
      lastUpdatedOn:
        description: ''
        type: object
    required:
    - lastUpdatedOn
  Match:
    title: Match
    type: object
    properties:
      createdFor.raw:
        description: ''
        type: string
    required:
    - createdFor.raw
  Aggs:
    title: Aggs
    type: object
    properties:
      created_on:
        $ref: '#/definitions/CreatedOn'
      status:
        $ref: '#/definitions/Status'
      authors.count:
        $ref: '#/definitions/AuthorsCount'
      content_count:
        $ref: '#/definitions/ContentCount'
    required:
    - created_on
    - status
    - authors.count
    - content_count
  CreatedOn:
    title: CreatedOn
    type: object
    properties:
      date_histogram:
        $ref: '#/definitions/DateHistogram'
    required:
    - date_histogram
  DateHistogram:
    title: DateHistogram
    type: object
    properties:
      field:
        description: ''
        type: string
      interval:
        description: ''
        type: string
      format:
        description: ''
        type: string
    required:
    - field
    - interval
    - format
  Status:
    title: Status
    type: object
    properties:
      terms:
        $ref: '#/definitions/Terms'
      aggs:
        $ref: '#/definitions/Aggs21'
    required:
    - terms
    - aggs
  Terms:
    title: Terms
    type: object
    properties:
      field:
        description: ''
        type: string
      include:
        description: ''
        type: array
        items:
          type: string
    required:
    - field
    - include
  Aggs21:
    title: Aggs21
    type: object
    properties:
      updated_on:
        $ref: '#/definitions/UpdatedOn'
    required:
    - updated_on
  UpdatedOn:
    title: UpdatedOn
    type: object
    properties:
      date_histogram:
        $ref: '#/definitions/DateHistogram'
    required:
    - date_histogram
  AuthorsCount:
    title: AuthorsCount
    type: object
    properties:
      cardinality:
        $ref: '#/definitions/Cardinality'
    required:
    - cardinality
  Cardinality:
    title: Cardinality
    type: object
    properties:
      field:
        description: ''
        type: string
      precision_threshold:
        description: ''
        type: integer
        format: int32
    required:
    - field
    - precision_threshold
  ContentCount:
    title: ContentCount
    type: object
    properties:
      terms:
        $ref: '#/definitions/Terms27'
    required:
    - terms
  Terms27:
    title: Terms27
    type: object
    properties:
      field:
        description: ''
        type: string
      include:
        description: ''
        type: string
    required:
    - field
    - include
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
