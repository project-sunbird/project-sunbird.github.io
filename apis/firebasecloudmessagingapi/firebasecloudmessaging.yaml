swagger: '2.0'
info:
  version: '1.0'
  title: Firebase Cloud Messaging API(s)
  description: >- 
     Firebase Cloud Messaging resources API  is a cross-platform solution for sending notifications on Android, iOS, and web applications.
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /v1/notification
securityDefinitions:
    auth:
      type: apiKey  # arbitrary name for the security scheme
      in: header # The secrity scheme parameter is in "header"
      name: Authorization # name of the header, query parameter or cookie
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /send:
    post:
      description: >-
       This API is associated with sending a push notification to mobile devices on the Sunbird Platform.
          - The **_/send_** endpoint executes the "SendPost" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Send a push notification
      tags:
      - Firebase Cloud Messaging API(s)
      operationId: SendPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for sending a push notification.
        schema:
          $ref: '#/definitions/FcmPushrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."send push notification" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "send push notification" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /send
          headers:
            Content-Type: application/json
            Authorization: Bearer {{api-key}}
          body: >-
            {

            "request": {
                "to":"SunbirdNotif",
                "type":"fcm",
              "data": {
                  "title" : "Announcement!!",
                  "notifType" : "announcement",
                  "summary" : "New announcement from rootOrg",
                  "body" : "www.staging-sunbird.org/new/announcement"
              }
            }

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: fcm push
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  FcmPushrequest:
    title: fcm pushRequest
    example:
      request:
        to: SunbirdNotif
        type: fcm
        data:
          title: Announcement!!
          notifType: announcement
          summary: New announcement from rootOrg
          body: www.staging-sunbird.org/new/announcement
    type: object
    properties:
      request:
        $ref: '#/definitions/Request'
        example:
          to: SunbirdNotif
          type: fcm
          data:
            title: Announcement!!
            notifType: announcement
            summary: New announcement from rootOrg
            body: www.staging-sunbird.org/new/announcement
    required:
    - request
  Request:
    title: Request
    example:
      to: SunbirdNotif
      type: fcm
      data:
        title: Announcement!!
        notifType: announcement
        summary: New announcement from rootOrg
        body: www.staging-sunbird.org/new/announcement
    type: object
    properties:
      to:
        description: ''
        example: SunbirdNotif
        type: string
      type:
        description: ''
        example: fcm
        type: string
      data:
        $ref: '#/definitions/Data'
        example:
          title: Announcement!!
          notifType: announcement
          summary: New announcement from rootOrg
          body: www.staging-sunbird.org/new/announcement
    required:
    - to
    - type
    - data
  Data:
    title: Data
    example:
      title: Announcement!!
      notifType: announcement
      summary: New announcement from rootOrg
      body: www.staging-sunbird.org/new/announcement
    type: object
    properties:
      title:
        description: ''
        example: Announcement!!
        type: string
      notifType:
        description: ''
        example: announcement
        type: string
      summary:
        description: ''
        example: New announcement from rootOrg
        type: string
      body:
        description: ''
        example: www.staging-sunbird.org/new/announcement
        type: string
    required:
    - title
    - notifType
    - summary
    - body
  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
