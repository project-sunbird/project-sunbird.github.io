swagger: '2.0'
info:
  version: '1.0'
  title: Page API(s)
  description: >-
         The Page resources APIs are used to set up the current page, change settings, and configure how things will be displayed to the user
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /data/v1/page
securityDefinitions:
  auth:
    type: apiKey
    name: api_key
    in: header
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /create:
    post:
      description: >-
       This API is associated with creating a new page. To create a page first create the page section using section create api.make page name unique.
          - The **_/create_** endpoint executes the "create location" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Create Page
      operationId: CreatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for creating a page.
        schema:
          $ref: '#/definitions/CreatePagerequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which creating page request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."create page" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "create page" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /create
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: "{\r\n\"id\":\"unique API ID\",\r\n\"ts\":\"2013/10/15 16:16:39\",\r\n\"params\": { },\r\n \"request\":{\r\n        \"name\":\"Resources\",\r\n        \"portalMap\":[\r\n           {\r\n            \"id\":\"01228383082462412826\",\r\n            \"index\":1,\r\n            \"group\":1\r\n            \r\n          },\r\n           {\r\n            \"id\":\"01228383384379392023\",\r\n             \"index\":1,\r\n            \"group\":2\r\n          }\r\n        ],\r\n        \"appMap\":[\r\n          {\r\n            \"id\":\"01228383082462412826\",\r\n             \"index\":1,\r\n            \"group\":1\r\n          },\r\n           {\r\n            \"id\":\"01228383384379392023\",\r\n             \"index\":1,\r\n            \"group\":2\r\n          }\r\n          ]\r\n        \r\n      }\r\n   }"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: create page
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /section/list:
    get:
      description: >-
       This API is associated with fetching the settings of a page.
          - The **_/all/settings_** endpoint executes the "fetch settings" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Fetch All Page Settings
      operationId: AllSettingsGet
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which fetch settings request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."fetch settings" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "fetch settings" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /all/settings
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: get All Page Settings
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /read/{pageName}:
    parameters:
      - in: path
        name: pageName
        type: string
        required: true
        description: 'Please append a valid Section Id to the request URL' 
    get:
      description: >-
       This API is associated with fetching specific resources.
          - The **_/Resource_** endpoint executes the "get specific page resources" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Get Specific Page Resources
      operationId: ResourceGet
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which get specific page resources request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."get specific page resources" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "get specific page resources" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /Resource
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: get particular page Settings
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /section/create:
    post:
      description:  >-
       This API is associated with creating a new section on a page.
          - The **_/org/v1/location/create_** endpoint executes the "create new section" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: create page section
      operationId: SectionCreatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for creating geo location.
        schema:
          $ref: '#/definitions/CreatePageSectionrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which create section request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."create section" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "create section" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /section/create
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >-
            {

            "id":"unique API ID",

            "ts":"2013/10/15 16:16:39",

            "params": { },

            "request":{

             "name":"Recommended TextBook",

             "searchQuery":{"request": {

                 "query":"",

                 "filters":

                 {"language":["English"],"contentType":["TextBook"]},"limit":10,"sort_by":{"lastUpdatedOn":"desc"}}},

             "sectionDataType" :"course",

             "display":{"name":{"en":"popular story","hi":"????????"}}

                    }

              }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: create page section
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /section/update:
    patch:
      description:  >-
       This API is associated with updating content of a section on a page.
          - The **_section/update_** endpoint executes the "update section" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Update Page Section 
      operationId: SectionUpdatePatch
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for creating geo location.
        schema:
          $ref: '#/definitions/UpdatePageSectionInforequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which updating page section request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."page section" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "page section" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: PATCH
          uri: /section/update
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >-
            {

            "id":"unique API ID",

            "ts":"2013/10/15 16:16:39",

            "params": { },

            "request":{

              "id":"0122662435116892160",

             "name":"Popular Course",

             "searchQuery":{"request": { "query": "","filters":{"objectType": ["Content"],"mimeType": ["application/vnd.ekstep.html-archive"],"status": ["Draft", "Live"]},"offset": 0,"limit": 5 }},

             "sectionDataType" :"course",

             "display":{

                    "name":{

                            "en":"popular Course",

                            "hi":"????????"

                              }

                      }

                    }

              }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: update page section info
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /section/read/{SectionId}:
    parameters:
      - in: path
        name: SectionId
        type: string
        required: true
        description: 'Please append a valid Section Id to the request URL' 
    get:
      description:  >-
       This API is associated with fetching specific section details.
          - The **_/section/{SectionId}_** endpoint executes the "fetch section" request based on parameters provided as metadata in the request body
          -  {...}refers to a section of endpoint URL path that needs to be replaced by appropriate Id
          - Required fields cannot be left null or empty
      summary: Fetch Section Details by Id
      operationId: Section0122771215738306560Get
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which Fetch Section Details request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."fetching section details" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "fetching section details" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /section/read/0122771215738306560
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: get section details by id
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /update:
    patch:
      description:  >-
       This API is associated with updating the page information
          - The **_update_** endpoint executes the "update page information" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Update Page Info
      operationId: UpdatePatch
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for updating page info.
        schema:
          $ref: '#/definitions/UpdatePageInforequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which update page information request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."update page information" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "update page information" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: PATCH
          uri: /update
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: "{\r\n\"id\":\"unique API ID\",\r\n\"ts\":\"2013/10/15 16:16:39\",\r\n\"params\": { },\r\n \"request\":{\r\n        \"name\":\"Resourcessss\",\r\n        \"id\":\"01228394137835929612\",\r\n        \"portalMap\":[\r\n           {\r\n            \"id\":\"01228383082462412826\",\r\n            \"index\":1,\r\n            \"group\":1\r\n            \r\n          },\r\n           {\r\n            \"id\":\"01228383384379392023\",\r\n             \"index\":1,\r\n            \"group\":2\r\n          }\r\n        ],\r\n        \"appMap\":[\r\n          {\r\n            \"id\":\"01228383082462412826\",\r\n             \"index\":1,\r\n            \"group\":1\r\n          },\r\n           {\r\n            \"id\":\"01228383384379392023\",\r\n             \"index\":1,\r\n            \"group\":2\r\n          }\r\n          ]\r\n        \r\n      }\r\n   }"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: update page info
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /assemble:
    post:
      description:  >-
       This API is associated with fetching page complete data.
          - The **_assemble_** endpoint executes the "Get Page data" request based on parameters provided as metadata in the request body
          - Required fields cannot be left null or empty
      summary: Get Page Data 
      operationId: AssemblePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the request for Get Page data.
        schema:
          $ref: '#/definitions/GetPageData~1Assemblerequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
           The Content Type entity is the media type of the resource.
            Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which Get Page Data request was sent.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: 'The token/key used to execute the API'
      responses:
        '200':
          description: 'OK ! Successful operation."Get Page Data" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Get Page Data" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /assemble
          headers:
            Content-Type: application/json
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            ts: 2017-05-25 10:18:56:578+0530
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: "{\r\n\"id\":\"unique API ID\",\r\n\"ts\":\"2013/10/15 16:16:39\",\r\n\"params\": { },\r\n \"request\":{\r\n         \"source\":\"web\",\r\n         \"name\":\"page\",\r\n         \"filters\":{\r\n                 \"objectType\": [\"Content\"]\r\n                \r\n         }\r\n      }\r\n   }"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: get page data / assemble
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  CreatePagerequest:
    title: create pageRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        name: Resources
        organisationId: id of organisation, if you want to create page for your org only. if not pass then page will be created for all org.
        portalMap:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        appMap:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request'
        example:
          name: Resources
          portalMap:
          - id: 01228383082462412826
            index: 1
            group: 1
          - id: 01228383384379392023
            index: 1
            group: 2
          appMap:
          - id: 01228383082462412826
            index: 1
            group: 1
          - id: 01228383384379392023
            index: 1
            group: 2
    required:
    - id
    - ts
    - params
    - request
  Request:
    title: Request
    example:
      name: Resources
      portalMap:
      - id: 01228383082462412826
        index: 1
        group: 1
      - id: 01228383384379392023
        index: 1
        group: 2
      appMap:
      - id: 01228383082462412826
        index: 1
        group: 1
      - id: 01228383384379392023
        index: 1
        group: 2
    type: object
    properties:
      name:
        description: 'name of your page'
        example: Resources
        type: string
      organisationId:
        description: 'your organisation id '
        type : string
      portalMap:
        description: ''
        example:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        type: array
        items:
          $ref: '#/definitions/PortalMap'
      appMap:
        description: ''
        example:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        type: array
        items:
          $ref: '#/definitions/AppMap'
    required:
    - name
    - portalMap
    - appMap
  PortalMap:
    title: PortalMap
    example:
      id: 01228383082462412826
      index: 1
      group: 1
    type: object
    properties:
      id:
        description: ''
        example: 01228383082462412826
        type: string
      index:
        description: ''
        example: 1
        type: integer
        format: int32
      group:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - id
    - index
    - group
  AppMap:
    title: AppMap
    example:
      id: 01228383082462412826
      index: 1
      group: 1
    type: object
    properties:
      id:
        description: ''
        example: 01228383082462412826
        type: string
      index:
        description: ''
        example: 1
        type: integer
        format: int32
      group:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - id
    - index
    - group
  CreatePageSectionrequest:
    title: create page sectionRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        name: Recommended TextBook
        searchQuery:
          request:
            query: ''
            filters:
              language:
              - English
              contentType:
              - TextBook
            limit: 10
            sort_by:
              lastUpdatedOn: desc
        sectionDataType: course
        display:
          name:
            en: popular story
            hi: ????????
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request5'
        example:
          name: Recommended TextBook
          searchQuery:
            request:
              query: ''
              filters:
                language:
                - English
                contentType:
                - TextBook
              limit: 10
              sort_by:
                lastUpdatedOn: desc
          sectionDataType: course
          display:
            name:
              en: popular story
              hi: ????????
    required:
    - id
    - ts
    - params
    - request
  Request5:
    title: Request5
    example:
      name: Recommended TextBook
      searchQuery:
        request:
          query: ''
          filters:
            language:
            - English
            contentType:
            - TextBook
          limit: 10
          sort_by:
            lastUpdatedOn: desc
      sectionDataType: course
      display:
        name:
          en: popular story
          hi: ????????
    type: object
    properties:
      name:
        description: 'unique name of your section. it will refer to your page'
        example: Recommended TextBook
        type: string
      searchQuery:
        $ref: '#/definitions/SearchQuery'
        example:
          request:
            query: ''
            filters:
              language:
              - English
              contentType:
              - TextBook
            limit: 10
            sort_by:
              lastUpdatedOn: desc
      sectionDataType:
        description: ''
        example: course
        type: string
      display:
        $ref: '#/definitions/Display'
        example:
          name:
            en: popular story
            hi: ????????
    required:
    - name
    - searchQuery
    - sectionDataType
    - display
  SearchQuery:
    title: SearchQuery
    example:
      request:
        query: ''
        filters:
          language:
          - English
          contentType:
          - TextBook
        limit: 10
        sort_by:
          lastUpdatedOn: desc
    type: object
    properties:
      request:
        $ref: '#/definitions/Request7'
        example:
          query: ''
          filters:
            language:
            - English
            contentType:
            - TextBook
          limit: 10
          sort_by:
            lastUpdatedOn: desc
    required:
    - request
  Request7:
    title: Request7
    example:
      query: ''
      filters:
        language:
        - English
        contentType:
        - TextBook
      limit: 10
      sort_by:
        lastUpdatedOn: desc
    type: object
    properties:
      query:
        description: ''
        type: string
      filters:
        $ref: '#/definitions/Filters'
        example:
          language:
          - English
          contentType:
          - TextBook
      limit:
        description: ''
        example: 10
        type: integer
        format: int32
      sort_by:
        $ref: '#/definitions/SortBy'
        example:
          lastUpdatedOn: desc
    required:
    - query
    - filters
    - limit
    - sort_by
  Filters:
    title: Filters
    example:
      language:
      - English
      contentType:
      - TextBook
    type: object
    properties:
      language:
        description: ''
        example:
        - English
        type: array
        items:
          type: string
      contentType:
        description: ''
        example:
        - TextBook
        type: array
        items:
          type: string
    required:
    - language
    - contentType
  SortBy:
    title: SortBy
    example:
      lastUpdatedOn: desc
    type: object
    properties:
      lastUpdatedOn:
        description: ''
        example: desc
        type: string
    required:
    - lastUpdatedOn
  Display:
    title: Display
    example:
      name:
        en: popular story
        hi: ????????
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        example:
          en: popular story
          hi: ????????
    required:
    - name
  Name:
    title: Name
    example:
      en: popular story
      hi: ????????
    type: object
    properties:
      en:
        description: ''
        example: popular story
        type: string
      hi:
        description: ''
        example: ????????
        type: string
    required:
    - en
    - hi
  UpdatePageSectionInforequest:
    title: update page section infoRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        id: 0122662435116892160
        name: Popular Course
        searchQuery:
          request:
            query: ''
            filters:
              objectType:
              - Content
              mimeType:
              - application/vnd.ekstep.html-archive
              status:
              - Draft
              - Live
            offset: 0
            limit: 5
        sectionDataType: course
        display:
          name:
            en: popular Course
            hi: ????????
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request13'
        example:
          id: 0122662435116892160
          name: Popular Course
          searchQuery:
            request:
              query: ''
              filters:
                objectType:
                - Content
                mimeType:
                - application/vnd.ekstep.html-archive
                status:
                - Draft
                - Live
              offset: 0
              limit: 5
          sectionDataType: course
          display:
            name:
              en: popular Course
              hi: ????????
    required:
    - id
    - ts
    - params
    - request
  Request13:
    title: Request13
    example:
      id: 0122662435116892160
      name: Popular Course
      searchQuery:
        request:
          query: ''
          filters:
            objectType:
            - Content
            mimeType:
            - application/vnd.ekstep.html-archive
            status:
            - Draft
            - Live
          offset: 0
          limit: 5
      sectionDataType: course
      display:
        name:
          en: popular Course
          hi: ????????
    type: object
    properties:
      id:
        description: ''
        example: 0122662435116892160
        type: string
      name:
        description: ''
        example: Popular Course
        type: string
      searchQuery:
        $ref: '#/definitions/SearchQuery14'
        example:
          request:
            query: ''
            filters:
              objectType:
              - Content
              mimeType:
              - application/vnd.ekstep.html-archive
              status:
              - Draft
              - Live
            offset: 0
            limit: 5
      sectionDataType:
        description: ''
        example: course
        type: string
      display:
        $ref: '#/definitions/Display'
        example:
          name:
            en: popular Course
            hi: ????????
    required:
    - id
    - name
    - searchQuery
    - sectionDataType
    - display
  SearchQuery14:
    title: SearchQuery14
    example:
      request:
        query: ''
        filters:
          objectType:
          - Content
          mimeType:
          - application/vnd.ekstep.html-archive
          status:
          - Draft
          - Live
        offset: 0
        limit: 5
    type: object
    properties:
      request:
        $ref: '#/definitions/Request15'
        example:
          query: ''
          filters:
            objectType:
            - Content
            mimeType:
            - application/vnd.ekstep.html-archive
            status:
            - Draft
            - Live
          offset: 0
          limit: 5
    required:
    - request
  Request15:
    title: Request15
    example:
      query: ''
      filters:
        objectType:
        - Content
        mimeType:
        - application/vnd.ekstep.html-archive
        status:
        - Draft
        - Live
      offset: 0
      limit: 5
    type: object
    properties:
      query:
        description: ''
        type: string
      filters:
        $ref: '#/definitions/Filters16'
        example:
          objectType:
          - Content
          mimeType:
          - application/vnd.ekstep.html-archive
          status:
          - Draft
          - Live
      offset:
        description: ''
        example: 0
        type: integer
        format: int32
      limit:
        description: ''
        example: 5
        type: integer
        format: int32
    required:
    - query
    - filters
    - offset
    - limit
  Filters16:
    title: Filters16
    example:
      objectType:
      - Content
      mimeType:
      - application/vnd.ekstep.html-archive
      status:
      - Draft
      - Live
    type: object
    properties:
      objectType:
        description: ''
        example:
        - Content
        type: array
        items:
          type: string
      mimeType:
        description: ''
        example:
        - application/vnd.ekstep.html-archive
        type: array
        items:
          type: string
      status:
        description: ''
        example:
        - Draft
        - Live
        type: array
        items:
          type: string
    required:
    - objectType
    - mimeType
    - status
  UpdatePageInforequest:
    title: update page infoRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        name: Resourcessss
        id: 01228394137835929612
        portalMap:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        appMap:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request20'
        example:
          name: Resourcessss
          id: 01228394137835929612
          portalMap:
          - id: 01228383082462412826
            index: 1
            group: 1
          - id: 01228383384379392023
            index: 1
            group: 2
          appMap:
          - id: 01228383082462412826
            index: 1
            group: 1
          - id: 01228383384379392023
            index: 1
            group: 2
    required:
    - id
    - ts
    - params
    - request
  Request20:
    title: Request20
    example:
      name: Resourcessss
      id: 01228394137835929612
      portalMap:
      - id: 01228383082462412826
        index: 1
        group: 1
      - id: 01228383384379392023
        index: 1
        group: 2
      appMap:
      - id: 01228383082462412826
        index: 1
        group: 1
      - id: 01228383384379392023
        index: 1
        group: 2
    type: object
    properties:
      name:
        description: ''
        example: Resourcessss
        type: string
      id:
        description: ''
        example: 01228394137835929612
        type: string
      portalMap:
        description: ''
        example:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        type: array
        items:
          $ref: '#/definitions/PortalMap'
      appMap:
        description: ''
        example:
        - id: 01228383082462412826
          index: 1
          group: 1
        - id: 01228383384379392023
          index: 1
          group: 2
        type: array
        items:
          $ref: '#/definitions/AppMap'
    required:
    - name
    - id
    - portalMap
    - appMap
  GetPageData/Assemblerequest:
    title: get page data / assembleRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        source: web
        name: page
        organisationId: id of the organisation optional
        filters:
          objectType:
          - Content
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request24'
        example:
          source: web
          name: page
          filters:
            objectType:
            - Content
    required:
    - id
    - ts
    - params
    - request
  Request24:
    title: Request24
    example:
      source: web
      name: page
      filters:
        objectType:
        - Content
    type: object
    properties:
      source:
        description: 'possible values are app or web'
        example: web
        type: string
      name:
        description: 'name of your page'
        example: page
        type: string
      organisationId:
        description: 'if you pass the organisation id then system will try to match page name created by that organisation . if you have not created any page then don not pass organisationid key , you will get default creaetd page'
      filters:
        $ref: '#/definitions/Filters25'
        example:
          objectType:
          - Content
    required:
    - source
    - name
    
  Filters25:
    title: Filters25
    example:
      objectType:
      - Content
    type: object
    properties:
      objectType:
        description: ''
        example:
        - Content
        type: array
        items:
          type: string
    required:
    - objectType

  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'